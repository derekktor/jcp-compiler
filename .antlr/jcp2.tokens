CompilationUnit=1
PackageDeclaration=2
ImportDeclaration=3
ClassDeclaration=4
Modifier=5
Body=6
BodyDeclaration=7
ConstructorDeclaration=8
Parameters=9
Parameter=10
Type=11
PrimitiveType=12
NumericType=13
IntegralType=14
FloatingPointType=15
ReferenceType=16
ClassType=17
ArrayType=18
Dims=19
MemberDeclaration=20
FieldDeclaration=21
VariableDeclarators=22
VariableDeclarator=23
VariableDeclaratorId=24
VariableInitializer=25
Expression=26
Assignment=27
LeftHandSide=28
ArrayAccess=29
FieldAccess=30
ExpressionName=31
AmbiguousName=32
ConditionalExpression=33
UnaryExpression=34
PreincrementExpression=35
PredecrementExpression=36
UnaryExpressionNotPlusMinus=37
CastExpression=38
PostfixExpression=39
Primary=40
ArrayCreationExpression=41
DimExprs=42
DimExpr=43
ClassOrInterfaceType=44
PrimaryNoNewArray_lfno=45
MethodDeclaration=46
Block=47
BlockStatements=48
BlockStatement=49
LocalVariableDeclarationStatement=50
LocalVariableDeclaration=51
Statement=52
EmptyStatement=53
ExpressionStatement=54
IfStatement=55
WhileStatement=56
ForStatement=57
ForInit=58
ForUpdate=59
ForEachStatement=60
DoStatement=61
SwitchStatement=62
SwitchBlock=63
SwitchBlockStatementGroup=64
SwitchLabel=65
BreakStatement=66
ContinueStatement=67
ReturnStatement=68
SynchronizedStatement=69
ThrowStatement=70
TryStatement=71
Catches=72
CatchClause=73
Finally=74
AssertStatement=75
FormalParameter=76
MethodHeader=77
MethodDeclarator=78
Literal=79
ABSTRACT=80
ASSERT=81
BOOLEAN=82
BREAK=83
BYTE=84
CASE=85
CATCH=86
CHAR=87
CLASS=88
CONST=89
CONTINUE=90
DEFAULT=91
DO=92
DOUBLE=93
ELSE=94
ENUM=95
EXPORTS=96
EXTENDS=97
FINAL=98
FINALLY=99
FLOAT=100
FOR=101
IF=102
GOTO=103
IMPLEMENTS=104
INSTANCEOF=105
INT=106
INTERFACE=107
LONG=108
MODULE=109
NATIVE=110
NEW=111
OPEN=112
OPERNS=113
PRIVATE=114
PROTECTED=115
PROVIDES=116
PUBLIC=117
REQUIRES=118
RETURN=119
SHORT=120
STATIC=121
STRICTFP=122
SUPER=123
SWITCH=124
SYNCHRONIZED=125
THIS=126
THROW=127
THROWS=128
TO=129
TRANSIENT=130
TRANSITIVE=131
TRY=132
USES=133
VOID=134
VOLATILE=135
WHILE=136
WITH=137
UNDER_SCORE=138
LPAREN=139
RPAREN=140
LBRACE=141
RBRACE=142
LBRACK=143
RBRACK=144
SEMI=145
COMMA=146
DOT=147
ELLIPSIS=148
AT=149
COLONCOLON=150
IDENTIFIER=151
WS=152
AssignmentOperator=153
IntegerLiteral=154
FloatingPointLiteral=155
BooleanLiteral=156
CharacterLiteral=157
StringLiteral=158
NullLiteral=159
TRUE=160
FALSE=161
NULL=162
OR=163
AND=164
'test'=33
'abstract'=80
'assert'=81
'boolean'=82
'break'=83
'byte'=84
'case'=85
'catch'=86
'char'=87
'class'=88
'const'=89
'continue'=90
'default'=91
'do'=92
'double'=93
'else'=94
'enum'=95
'exports'=96
'extends'=97
'final'=98
'finally'=99
'float'=100
'for'=101
'if'=102
'goto'=103
'implements'=104
'instanceof'=105
'int'=106
'interface'=107
'long'=108
'module'=109
'native'=110
'new'=111
'open'=112
'opens'=113
'private'=114
'protected'=115
'provides'=116
'public'=117
'requires'=118
'return'=119
'short'=120
'static'=121
'strictfp'=122
'super'=123
'switch'=124
'synchronized'=125
'this'=126
'throw'=127
'throws'=128
'to'=129
'transient'=130
'transitive'=131
'try'=132
'uses'=133
'void'=134
'volatile'=135
'while'=136
'with'=137
'_'=138
'('=139
')'=140
'{'=141
'}'=142
'['=143
']'=144
';'=145
','=146
'.'=147
'...'=148
'@'=149
'::'=150
'true'=160
'false'=161
'null'=162
'||'=163
'&&'=164
